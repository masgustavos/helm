apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helpers.fullname" . }}
  labels:
    {{- include "helpers.labels" . | nindent 4 }}
spec:
  {{- if not .Values.hpa.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}

  revisionHistoryLimit: 10

  selector:
    matchLabels:
      {{- include "helpers.selector" . | nindent 6 }}

  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .Values.rollingUpdate.maxSurge }}
      maxUnavailable: 0

  template:
    metadata:
      annotations:
        checksum/env-config: {{ include (print $.Template.BasePath "/env-config.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations -}}
        {{ toYaml . | nindent 8}}
      {{- end }}
      labels:
        {{- include "helpers.labels" . | nindent 8 }}

    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}

      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          volumeMounts:
            - name: alertmanager-discord-config
              mountPath: /config/
              {{- if .Values.configAsSecret.name }}
              readOnly: true
              {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "helpers.fullname" . }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path | default "/" }}
              port: {{ .Values.service.targetPort | default "http" }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}

          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path | default "/" }}
              port: {{ .Values.service.targetPort | default "http" }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}

          resources:
            {{- toYaml .Values.resources | nindent 12 }}


      affinity:
        {{- with .Values.nodeAffinity }}
        nodeAffinity:
          {{ toYaml . | nindent 10 }}
        {{- end }}

        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 99
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: {{ include "helpers.appLabelKey" . }}
                  operator: In
                  values:
                  - {{ include "helpers.name" . }}
              topologyKey: "kubernetes.io/hostname"

    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: alertmanager-discord-config
        {{- if .Values.configAsSecret.name }}
          secret:
            secretName: {{ .Values.configAsSecret.name }}
            items:
              - key: config
                path: config.json
        {{- else }}
          configMap:
            name: {{ include "helpers.fullname" . }}
            items:
              - key: config
                path: config.json
        {{- end }}